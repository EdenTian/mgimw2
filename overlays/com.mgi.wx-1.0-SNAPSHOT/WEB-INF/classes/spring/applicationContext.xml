<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">

<!--扫描属性文件到ioc容器-->
    <!--<context:property-placeholder location="classpath:/wx.properties"/>-->
    <context:property-placeholder location="classpath:properties/*.properties"/>

    <!--扫描spring注解-->
    <context:component-scan base-package="com">
        <context:exclude-filter type="annotation"
                                expression="org.springframework.web.bind.annotation.RestController"/>
    </context:component-scan>

    <!--数据源-->
    <!--<bean class="com.alibaba.druid.pool.DruidDataSource" id="dataSource">-->
        <!--&lt;!&ndash; 数据库基本信息配置 &ndash;&gt;-->
        <!--<property name="url" value="${jdbc.mysql.jdbcUrl}"/>-->
        <!--<property name="username" value="${jdbc.mysql.user}"/>-->
        <!--<property name="password" value="${jdbc.mysql.password}"/>-->
        <!--<property name="driverClassName" value="${jdbc.mysql.driverClass}"/>-->
        <!--&lt;!&ndash; 最大并发连接数 &ndash;&gt;-->
        <!--<property name="maxActive" value="100"/>-->
        <!--&lt;!&ndash; 初始化连接数量 &ndash;&gt;-->
        <!--<property name="initialSize" value="30"/>-->
        <!--&lt;!&ndash; 配置获取连接等待超时的时间 &ndash;&gt;-->
        <!--<property name="maxWait" value="10000"/>-->
        <!--&lt;!&ndash; 最小空闲连接数 &ndash;&gt;-->
        <!--<property name="minIdle" value="20"/>-->
    <!--</bean>-->

    <!--&lt;!&ndash;整合mybatis&ndash;&gt;-->
    <!--<bean class="org.mybatis.spring.SqlSessionFactoryBean" id="sqlSessionFactory">-->
        <!--<property name="configLocation" value="classpath:/mybatis/mybatis-config.xml"/>-->
        <!--<property name="dataSource" ref="dataSource"/>-->
    <!--</bean>-->

    <!--配置service扫描的包-->
    <context:component-scan base-package="com.*.service"/>

    <!--配置声明式事务 -->
    <!--<bean id="dataSourceTransactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">-->
        <!--<property name="dataSource" ref="dataSource"/>-->
    <!--</bean>-->
    <!--<aop:config>-->
        <!--<aop:advisor advice-ref="txAdvice" pointcut="execution(* *..*Service*.*(..))"/>-->
    <!--</aop:config>-->

    <!--<tx:advice id="txAdvice" transaction-manager="dataSourceTransactionManager">-->
        <!--<tx:attributes>-->
            <!--<tx:method name="query*" read-only="true"/>-->
            <!--<tx:method name="insert*" rollback-for="java.lang.Exception" propagation="REQUIRES_NEW"/>-->
            <!--<tx:method name="save*" rollback-for="java.lang.Exception" propagation="REQUIRES_NEW"/>-->
            <!--<tx:method name="remove*" rollback-for="java.lang.Exception" propagation="REQUIRES_NEW"/>-->
            <!--<tx:method name="update*" rollback-for="java.lang.Exception" propagation="REQUIRES_NEW"/>-->
        <!--</tx:attributes>-->
    <!--</tx:advice>-->

    <!--通用mapper-->
    <bean class="tk.mybatis.spring.mapper.MapperScannerConfigurer" id="scannerConfigurer">
        <property name="basePackage" value="com.*.mapper"/>
    </bean>

    <bean id="xService" class="com.soecode.wxtools.api.WxService"></bean>


</beans>